services:
  postgres:
    image: postgres:14.3
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  rabbitmq:
    image: masstransit/rabbitmq:latest
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  mongo:
    image: mongo:5.0.8
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express:1.0.0-alpha
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  proxy:
    image: nginx:1.21.6-alpine
    volumes:
      - ./proxy:/etc/nginx/templates
    ports:
      - "80:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - proxy.env

  frontend:
    build: ../ChatFrontend
    depends_on:
      - proxy
    env_file:
      - common.env

  relay:
    build: ../RelayService
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
      - common.env

  chat:
    build: ../ChatService
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    env_file:
      - common.env
      - chat.env

  user:
    build: ../UserService
    depends_on:
      - postgres
    env_file:
      - common.env
      - user.env
    
volumes:
  postgres-data:
    driver: local
  mongo-data:
    driver: local